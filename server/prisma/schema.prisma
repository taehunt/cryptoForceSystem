generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Admin {
  id           String @id @default(auto()) @map("_id") @db.ObjectId
  username     String @unique
  passwordHash String
  role         String
}

model Config {
  id    String @id @default(auto()) @map("_id") @db.ObjectId
  key   String @unique
  value String
}

model Transaction {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  type      String
  amount    Float
  status    String
  createdAt DateTime @default(now())
}

model User {
  id               String    @id @default(uuid()) @map("_id") // ✅ 추가됨
  email            String    @unique
  passwordHash     String
  walletAddress    String?
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime  @default(now())

  paymentRequests PaymentRequest[]
}

model Merchant {
  id               String   @id @default(auto()) @map("_id")
  name             String
  walletPrivateKey String
  walletAddress    String
  tokenAddress     String
  paymentRequests  PaymentRequest[] @relation("MerchantToPayments")
  createdAt        DateTime @default(now())
}

model PaymentRequest {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId // ✅ 수정
  userId        String
  merchantId    String
  amount        Float
  token         String
  walletAddress String
  txHash        String?
  status        String    @default("pending")
  createdAt     DateTime  @default(now())
  approvedAt    DateTime?

  user     User     @relation(fields: [userId], references: [id])
  merchant Merchant @relation(fields: [merchantId], references: [id], name: "MerchantToPayments") // ✅ 관계 이름 명시
}
